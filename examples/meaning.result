parse:
  ast: |-
    [
        {
            "type": "proc_definition",
            "name": {
                "type": "identifier",
                "value": "main",
                "text": "main",
                "offset": 5,
                "lineBreaks": 0,
                "line": 1,
                "col": 6
            },
            "parameters": [],
            "body": [
                {
                    "type": "var_assignment",
                    "var_name": {
                        "type": "identifier",
                        "value": "answer",
                        "text": "answer",
                        "offset": 18,
                        "lineBreaks": 0,
                        "line": 2,
                        "col": 5
                    },
                    "value": {
                        "type": "binary_operation",
                        "operator": {
                            "type": "multiply",
                            "value": "*",
                            "text": "*",
                            "offset": 29,
                            "lineBreaks": 0,
                            "line": 2,
                            "col": 16
                        },
                        "left": {
                            "type": "number_literal",
                            "value": 6,
                            "text": "6",
                            "offset": 27,
                            "lineBreaks": 0,
                            "line": 2,
                            "col": 14
                        },
                        "right": {
                            "type": "number_literal",
                            "value": 7,
                            "text": "7",
                            "offset": 31,
                            "lineBreaks": 0,
                            "line": 2,
                            "col": 18
                        }
                    }
                }
            ]
        }
    ]
check: []
generate:
  js: |-
    async function main() {
        var answer = 6 * 7;
    }

    main().catch(err => console.log(err.message));

    // Built-in Functions:

    function split(string, separator) {
        return string.split(separator)
    }

    function print(...args) {
        console.log(...args);
    }

    function pop(array) {
        return array.pop();
    }

    function push(array, item) {
        return array.push(item);
    }

    function concat(one, other) {
        return one.concat(other);
    }

    function map(fn, arr) {
        return arr.map(fn);
    }

    function filter(fn, arr) {
        return arr.filter(fn);
    }

    function reduce(fn, initValue, arr) {
        return arr.reduce(fn, initValue);
    }

    function sqrt(num) {
        return Math.sqrt(num);
    }

    function sqr(num) {
        return num * num;
    }

    function join(array, separator) {
        return array.join(separator);
    }
exec:
  stdout: ''
  stderr: ''
