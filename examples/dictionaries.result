parse:
  ast: |-
    [
        {
            "type": "proc_definition",
            "name": {
                "type": "identifier",
                "value": "main",
                "start": {
                    "line": 1,
                    "col": 5
                },
                "end": {
                    "line": 1,
                    "col": 9
                }
            },
            "parameters": [],
            "body": {
                "type": "code_block",
                "statements": [
                    {
                        "type": "var_assignment",
                        "var_name": {
                            "type": "identifier",
                            "value": "dict",
                            "start": {
                                "line": 2,
                                "col": 4
                            },
                            "end": {
                                "line": 2,
                                "col": 8
                            }
                        },
                        "value": {
                            "type": "dictionary_literal",
                            "entries": [
                                [
                                    {
                                        "type": "identifier",
                                        "value": "name",
                                        "start": {
                                            "line": 2,
                                            "col": 13
                                        },
                                        "end": {
                                            "line": 2,
                                            "col": 17
                                        }
                                    },
                                    {
                                        "type": "string_literal",
                                        "value": "George",
                                        "start": {
                                            "line": 2,
                                            "col": 19
                                        },
                                        "end": {
                                            "line": 2,
                                            "col": 27
                                        }
                                    }
                                ],
                                [
                                    {
                                        "type": "identifier",
                                        "value": "age",
                                        "start": {
                                            "line": 2,
                                            "col": 29
                                        },
                                        "end": {
                                            "line": 2,
                                            "col": 32
                                        }
                                    },
                                    {
                                        "type": "number_literal",
                                        "value": 12,
                                        "start": {
                                            "line": 2,
                                            "col": 34
                                        },
                                        "end": {
                                            "line": 2,
                                            "col": 36
                                        }
                                    }
                                ]
                            ],
                            "start": {
                                "line": 2,
                                "col": 11
                            },
                            "end": {
                                "line": 2,
                                "col": 38
                            }
                        },
                        "start": {
                            "line": 2,
                            "col": 4
                        },
                        "end": {
                            "line": 2,
                            "col": 38
                        }
                    },
                    {
                        "type": "indexed_assignment",
                        "subject": {
                            "type": "var_reference",
                            "var_name": {
                                "type": "identifier",
                                "value": "dict",
                                "start": {
                                    "line": 3,
                                    "col": 4
                                },
                                "end": {
                                    "line": 3,
                                    "col": 8
                                }
                            },
                            "start": {
                                "line": 3,
                                "col": 4
                            },
                            "end": {
                                "line": 3,
                                "col": 8
                            }
                        },
                        "index": {
                            "type": "string_literal",
                            "value": "name",
                            "start": {
                                "line": 3,
                                "col": 9
                            },
                            "end": {
                                "line": 3,
                                "col": 15
                            }
                        },
                        "value": {
                            "type": "string_literal",
                            "value": "Barnes",
                            "start": {
                                "line": 3,
                                "col": 19
                            },
                            "end": {
                                "line": 3,
                                "col": 27
                            }
                        },
                        "start": {
                            "line": 3,
                            "col": 4
                        },
                        "end": {
                            "line": 3,
                            "col": 27
                        }
                    },
                    {
                        "type": "call_expression",
                        "fun_name": {
                            "type": "identifier",
                            "value": "print",
                            "start": {
                                "line": 4,
                                "col": 4
                            },
                            "end": {
                                "line": 4,
                                "col": 9
                            }
                        },
                        "arguments": [
                            {
                                "type": "indexed_access",
                                "subject": {
                                    "type": "var_reference",
                                    "var_name": {
                                        "type": "identifier",
                                        "value": "dict",
                                        "start": {
                                            "line": 4,
                                            "col": 10
                                        },
                                        "end": {
                                            "line": 4,
                                            "col": 14
                                        }
                                    },
                                    "start": {
                                        "line": 4,
                                        "col": 10
                                    },
                                    "end": {
                                        "line": 4,
                                        "col": 14
                                    }
                                },
                                "index": {
                                    "type": "string_literal",
                                    "value": "name",
                                    "start": {
                                        "line": 4,
                                        "col": 15
                                    },
                                    "end": {
                                        "line": 4,
                                        "col": 21
                                    }
                                },
                                "start": {
                                    "line": 4,
                                    "col": 10
                                },
                                "end": {
                                    "line": 4,
                                    "col": 22
                                }
                            }
                        ],
                        "start": {
                            "line": 4,
                            "col": 4
                        },
                        "end": {
                            "line": 4,
                            "col": 23
                        }
                    }
                ],
                "start": {
                    "line": 1,
                    "col": 12
                },
                "end": {
                    "line": 5,
                    "col": 1
                }
            },
            "start": {
                "line": 1,
                "col": 0
            },
            "end": {
                "line": 5,
                "col": 1
            }
        }
    ]
check: []
generate:
  js: |-
    async function main() {
        var dict = { [object Object]: "George", [object Object]: 12 };
        dict["name"] = "Barnes"
        print(dict["name"]);
    }

    main().catch(err => console.log(err.message));

    // Built-in Functions:

    function range(...args) {
        let start, end;
        if (args.length === 1) {
            start = 0
            end = args[0];
        } else if (args.length === 2) {
            start = args[0];
            end = args[1];
        } else {
            throw new Error("Wrong number of arguments");
        }
        const ret = [];
        for (let i = start; i < end; i++) {
            ret.push(i);
        }
        return ret;
    }

    function split(string, separator) {
        return string.split(separator)
    }

    function print(...args) {
        console.log(...args);
    }

    function pop(array) {
        return array.pop();
    }

    function push(array, item) {
        return array.push(item);
    }

    function concat(one, other) {
        return one.concat(other);
    }

    function map(fn, arr) {
        return arr.map(fn);
    }

    function filter(fn, arr) {
        return arr.filter(fn);
    }

    function reduce(fn, initValue, arr) {
        return arr.reduce(fn, initValue);
    }

    function sqrt(num) {
        return Math.sqrt(num);
    }

    function sqr(num) {
        return num * num;
    }

    function join(array, separator) {
        return array.join(separator);
    }
exec:
  error: |-
    Error: Command failed: node -e 'async function main() {
        var dict = { [object Object]: "George", [object Object]: 12 };
        dict["name"] = "Barnes"
        print(dict["name"]);
    }

    main().catch(err => console.log(err.message));

    // Built-in Functions:

    function range(...args) {
        let start, end;
        if (args.length === 1) {
            start = 0
            end = args[0];
        } else if (args.length === 2) {
            start = args[0];
            end = args[1];
        } else {
            throw new Error("Wrong number of arguments");
        }
        const ret = [];
        for (let i = start; i < end; i++) {
            ret.push(i);
        }
        return ret;
    }

    function split(string, separator) {
        return string.split(separator)
    }

    function print(...args) {
        console.log(...args);
    }

    function pop(array) {
        return array.pop();
    }

    function push(array, item) {
        return array.push(item);
    }

    function concat(one, other) {
        return one.concat(other);
    }

    function map(fn, arr) {
        return arr.map(fn);
    }

    function filter(fn, arr) {
        return arr.filter(fn);
    }

    function reduce(fn, initValue, arr) {
        return arr.reduce(fn, initValue);
    }

    function sqrt(num) {
        return Math.sqrt(num);
    }

    function sqr(num) {
        return num * num;
    }

    function join(array, separator) {
        return array.join(separator);
    }'
    [eval]:2
        var dict = { [object Object]: "George", [object Object]: 12 };
                             ^^^^^^

    SyntaxError: Unexpected identifier
        at new Script (vm.js:74:7)
        at createScript (vm.js:246:10)
        at Object.runInThisContext (vm.js:298:10)
        at Object.<anonymous> ([eval]-wrapper:6:22)
        at Module._compile (internal/modules/cjs/loader.js:702:30)
        at evalScript (internal/bootstrap/node.js:539:27)
        at startup (internal/bootstrap/node.js:213:9)
        at bootstrapNodeJSCore (internal/bootstrap/node.js:572:3)

        at ChildProcess.exithandler (child_process.js:291:12)
        at ChildProcess.emit (events.js:182:13)
        at maybeClose (internal/child_process.js:961:16)
        at Process.ChildProcess._handle.onexit (internal/child_process.js:248:5)
