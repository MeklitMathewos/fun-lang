parse:
  ast:
    - type: proc_definition
      name:
        type: identifier
        value: main
        text: main
        offset: 5
        lineBreaks: 0
        line: 1
        col: 6
      parameters: []
      body:
        - type: var_assignment
          var_name:
            type: identifier
            value: dict
            text: dict
            offset: 18
            lineBreaks: 0
            line: 2
            col: 5
          value:
            type: dictionary_literal
            entries:
              - - type: identifier
                  value: name
                  text: name
                  offset: 27
                  lineBreaks: 0
                  line: 2
                  col: 14
                - type: string_literal
                  value: George
                  text: '"George"'
                  offset: 33
                  lineBreaks: 0
                  line: 2
                  col: 20
              - - type: identifier
                  value: age
                  text: age
                  offset: 43
                  lineBreaks: 0
                  line: 2
                  col: 30
                - type: number_literal
                  value: 12
                  text: '12'
                  offset: 48
                  lineBreaks: 0
                  line: 2
                  col: 35
        - type: indexed_assignment
          subject:
            type: var_reference
            var_name:
              type: identifier
              value: dict
              text: dict
              offset: 57
              lineBreaks: 0
              line: 3
              col: 5
          index:
            type: string_literal
            value: name
            text: '"name"'
            offset: 62
            lineBreaks: 0
            line: 3
            col: 10
          value:
            type: string_literal
            value: Barnes
            text: '"Barnes"'
            offset: 72
            lineBreaks: 0
            line: 3
            col: 20
        - type: call_expression
          fun_name:
            type: identifier
            value: print
            text: print
            offset: 85
            lineBreaks: 0
            line: 4
            col: 5
          arguments:
            - type: indexed_access
              subject:
                type: var_reference
                var_name:
                  type: identifier
                  value: dict
                  text: dict
                  offset: 91
                  lineBreaks: 0
                  line: 4
                  col: 11
              index:
                type: string_literal
                value: name
                text: '"name"'
                offset: 96
                lineBreaks: 0
                line: 4
                col: 16
check: []
generate:
  js: |-
    async function main() {
        var dict = { name: "George", age: 12 };
        dict["name"] = "Barnes"
        print(dict["name"]);
    }

    main().catch(err => console.log(err.message));

    // Built-in Functions:

    function split(string, separator) {
        return string.split(separator)
    }

    function print(...args) {
        console.log(...args);
    }

    function pop(array) {
        return array.pop();
    }

    function push(array, item) {
        return array.push(item);
    }

    function concat(one, other) {
        return one.concat(other);
    }

    function map(fn, arr) {
        return arr.map(fn);
    }

    function filter(fn, arr) {
        return arr.filter(fn);
    }

    function reduce(fn, initValue, arr) {
        return arr.reduce(fn, initValue);
    }

    function sqrt(num) {
        return Math.sqrt(num);
    }

    function sqr(num) {
        return num * num;
    }
exec:
  stdout: |
    Barnes
  stderr: ''
