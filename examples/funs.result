parse:
  ast:
    - type: fun_definition
      name:
        type: identifier
        value: distance
        text: distance
        offset: 4
        lineBreaks: 0
        line: 1
        col: 5
      parameters:
        - type: identifier
          value: x1
          text: x1
          offset: 13
          lineBreaks: 0
          line: 1
          col: 14
        - type: identifier
          value: y1
          text: y1
          offset: 17
          lineBreaks: 0
          line: 1
          col: 18
        - type: identifier
          value: x2
          text: x2
          offset: 21
          lineBreaks: 0
          line: 1
          col: 22
        - type: identifier
          value: y2
          text: y2
          offset: 25
          lineBreaks: 0
          line: 1
          col: 26
      body:
        - type: return_statement
          value:
            type: call_expression
            fun_name:
              type: identifier
              value: sqrt
              text: sqrt
              offset: 42
              lineBreaks: 0
              line: 2
              col: 12
            arguments:
              - type: binary_operation
                operator:
                  type: plus
                  value: +
                  text: +
                  offset: 60
                  lineBreaks: 0
                  line: 2
                  col: 30
                left:
                  type: call_expression
                  fun_name:
                    type: identifier
                    value: sqr
                    text: sqr
                    offset: 47
                    lineBreaks: 0
                    line: 2
                    col: 17
                  arguments:
                    - type: binary_operation
                      operator:
                        type: minus
                        value: '-'
                        text: '-'
                        offset: 54
                        lineBreaks: 0
                        line: 2
                        col: 24
                      left:
                        type: var_reference
                        var_name:
                          type: identifier
                          value: x1
                          text: x1
                          offset: 51
                          lineBreaks: 0
                          line: 2
                          col: 21
                      right:
                        type: var_reference
                        var_name:
                          type: identifier
                          value: x2
                          text: x2
                          offset: 56
                          lineBreaks: 0
                          line: 2
                          col: 26
                right:
                  type: call_expression
                  fun_name:
                    type: identifier
                    value: sqr
                    text: sqr
                    offset: 62
                    lineBreaks: 0
                    line: 2
                    col: 32
                  arguments:
                    - type: binary_operation
                      operator:
                        type: minus
                        value: '-'
                        text: '-'
                        offset: 69
                        lineBreaks: 0
                        line: 2
                        col: 39
                      left:
                        type: var_reference
                        var_name:
                          type: identifier
                          value: x2
                          text: x2
                          offset: 66
                          lineBreaks: 0
                          line: 2
                          col: 36
                      right:
                        type: var_reference
                        var_name:
                          type: identifier
                          value: y2
                          text: y2
                          offset: 71
                          lineBreaks: 0
                          line: 2
                          col: 41
    - type: proc_definition
      name:
        type: identifier
        value: main
        text: main
        offset: 84
        lineBreaks: 0
        line: 5
        col: 6
      parameters: []
      body:
        - type: call_expression
          fun_name:
            type: identifier
            value: print
            text: print
            offset: 98
            lineBreaks: 0
            line: 6
            col: 5
          arguments:
            - type: call_expression
              fun_name:
                type: identifier
                value: distance
                text: distance
                offset: 104
                lineBreaks: 0
                line: 6
                col: 11
              arguments:
                - type: number_literal
                  value: 34
                  text: '34'
                  offset: 113
                  lineBreaks: 0
                  line: 6
                  col: 20
                - type: number_literal
                  value: 96
                  text: '96'
                  offset: 117
                  lineBreaks: 0
                  line: 6
                  col: 24
                - type: number_literal
                  value: 23
                  text: '23'
                  offset: 121
                  lineBreaks: 0
                  line: 6
                  col: 28
                - type: number_literal
                  value: 56
                  text: '56'
                  offset: 125
                  lineBreaks: 0
                  line: 6
                  col: 32
check: []
generate:
  js: |-
    function distance(x1, y1, x2, y2) {
        return sqrt(sqr(x1 - x2) + sqr(x2 - y2));
    }

    async function main() {
        print(distance(34, 96, 23, 56));
    }

    main().catch(err => console.log(err.message));

    // Built-in Functions:

    function split(string, separator) {
        return string.split(separator)
    }

    function print(...args) {
        console.log(...args);
    }

    function pop(array) {
        return array.pop();
    }

    function push(array, item) {
        return array.push(item);
    }

    function concat(one, other) {
        return one.concat(other);
    }

    function map(fn, arr) {
        return arr.map(fn);
    }

    function filter(fn, arr) {
        return arr.filter(fn);
    }

    function reduce(fn, initValue, arr) {
        return arr.reduce(fn, initValue);
    }

    function sqrt(num) {
        return Math.sqrt(num);
    }

    function sqr(num) {
        return num * num;
    }

    function join(array, separator) {
        return array.join(separator);
    }
exec:
  stdout: |
    34.785054261852174
  stderr: ''
