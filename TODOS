## TODOS

* complete jest-based test suite and document it
* check for purity in nested code blocks in general (if statements)
* make checker support loops and if statements
* mandatory return statements in funs?
* check that main proc exists
* generalize format of checker errors, and extract formating to outside of checker
* maybe have 2 pass traversal in checker to catalog the user defined callables first
* improve runtime errors
* write user manual
* documentation on the examples' test results format
* embed examples and docs in the grammar file?
* currying
* function composition
* function to get length of an array or dictionary
* allow for loop to loop through dictionary
* parenthesis
* plus equals
* check for undefined and unused variables
* check for wrong number of arguments in function calls
* regex
* multi-line allowance
* runtime diagnostics
* IO
    * read_file
    * write_file
* back-in-time debugger

## Later

* type annotations and compile-time type checking
* source maps

## Done

* check for purity in nested fun expressions (x)
* extract code_block into a grammar symbol (x)
* anonymous funs (x)
* reduce the size of token nodes in AST (x)
* ensure pure functions don't call non-pure ones (x)
* add code context display to checker errors and generator errors (x)
* add line number/range info in all nodes (x)
* add syntax checker for gen-parser (x)
* improve error message with run.js (x)
* unify test-example.js and run.js code (x)
* write comments and readmes (x)
* write some simple programs (x)
* string split (x)
* make run script (x)
* list - concat, pop (x)
* while loops (x)
* for loops for lists (x)
* if statements (x)
* print (x)
* have test runner execute the generated js (x)
* built-in functions and check for unknown functions (x)
* map/filter/reduce (x)
* more checks: can't do indexed assignment (x)
* add tokenizer and line info in checker and other diagnostics (x)
* test suite (x)
* index notation (x)
    * get
    * set
* type checking differentiating funs vs procs (x)
* funs (x)
* procs (x)
* numbers + simple arithmetic (x)
* strings + simple arithmetic (x)
* list (x)
* dictionaries (x)
* comments (x)
