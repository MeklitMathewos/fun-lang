code: |

  fun door(age) [
      message = "You may come in."
      if age >= 21 [
          # Do nothing
      ] else if age >= 18 [
          message = "Wait a couple years."
      ] else [
          message = "Stay out."
      ]
      return message
  ]
  proc main() [
      print(door(22))
      print(door(19))
      print(door(10))
  ]
parse: |-
  {
    "ast": [
      {
        "type": "fun_definition",
        "name": {
          "type": "identifier",
          "value": "door",
          "start": {
            "line": 2,
            "col": 4
          },
          "end": {
            "line": 2,
            "col": 8
          }
        },
        "parameters": [
          {
            "type": "identifier",
            "value": "age",
            "start": {
              "line": 2,
              "col": 9
            },
            "end": {
              "line": 2,
              "col": 12
            }
          }
        ],
        "body": {
          "type": "code_block",
          "statements": [
            {
              "type": "var_assignment",
              "var_name": {
                "type": "identifier",
                "value": "message",
                "start": {
                  "line": 3,
                  "col": 4
                },
                "end": {
                  "line": 3,
                  "col": 11
                }
              },
              "value": {
                "type": "string_literal",
                "value": "You may come in.",
                "start": {
                  "line": 3,
                  "col": 14
                },
                "end": {
                  "line": 3,
                  "col": 32
                }
              },
              "start": {
                "line": 3,
                "col": 4
              },
              "end": {
                "line": 3,
                "col": 32
              }
            },
            {
              "type": "if_statement",
              "condition": {
                "type": "binary_operation",
                "operator": {
                  "type": "gte",
                  "value": ">=",
                  "start": {
                    "line": 4,
                    "col": 11
                  },
                  "end": {
                    "line": 4,
                    "col": 13
                  }
                },
                "left": {
                  "type": "var_reference",
                  "var_name": {
                    "type": "identifier",
                    "value": "age",
                    "start": {
                      "line": 4,
                      "col": 7
                    },
                    "end": {
                      "line": 4,
                      "col": 10
                    }
                  },
                  "start": {
                    "line": 4,
                    "col": 7
                  },
                  "end": {
                    "line": 4,
                    "col": 10
                  }
                },
                "right": {
                  "type": "number_literal",
                  "value": 21,
                  "start": {
                    "line": 4,
                    "col": 14
                  },
                  "end": {
                    "line": 4,
                    "col": 16
                  }
                },
                "start": {
                  "line": 4,
                  "col": 7
                },
                "end": {
                  "line": 4,
                  "col": 16
                }
              },
              "consequent": {
                "type": "code_block",
                "statements": [
                  {
                    "type": "comment",
                    "value": " Do nothing",
                    "start": {
                      "line": 5,
                      "col": 8
                    },
                    "end": {
                      "line": 5,
                      "col": 20
                    }
                  }
                ],
                "start": {
                  "line": 4,
                  "col": 17
                },
                "end": {
                  "line": 6,
                  "col": 5
                }
              },
              "alternate": {
                "type": "if_statement",
                "condition": {
                  "type": "binary_operation",
                  "operator": {
                    "type": "gte",
                    "value": ">=",
                    "start": {
                      "line": 6,
                      "col": 18
                    },
                    "end": {
                      "line": 6,
                      "col": 20
                    }
                  },
                  "left": {
                    "type": "var_reference",
                    "var_name": {
                      "type": "identifier",
                      "value": "age",
                      "start": {
                        "line": 6,
                        "col": 14
                      },
                      "end": {
                        "line": 6,
                        "col": 17
                      }
                    },
                    "start": {
                      "line": 6,
                      "col": 14
                    },
                    "end": {
                      "line": 6,
                      "col": 17
                    }
                  },
                  "right": {
                    "type": "number_literal",
                    "value": 18,
                    "start": {
                      "line": 6,
                      "col": 21
                    },
                    "end": {
                      "line": 6,
                      "col": 23
                    }
                  },
                  "start": {
                    "line": 6,
                    "col": 14
                  },
                  "end": {
                    "line": 6,
                    "col": 23
                  }
                },
                "consequent": {
                  "type": "code_block",
                  "statements": [
                    {
                      "type": "var_assignment",
                      "var_name": {
                        "type": "identifier",
                        "value": "message",
                        "start": {
                          "line": 7,
                          "col": 8
                        },
                        "end": {
                          "line": 7,
                          "col": 15
                        }
                      },
                      "value": {
                        "type": "string_literal",
                        "value": "Wait a couple years.",
                        "start": {
                          "line": 7,
                          "col": 18
                        },
                        "end": {
                          "line": 7,
                          "col": 40
                        }
                      },
                      "start": {
                        "line": 7,
                        "col": 8
                      },
                      "end": {
                        "line": 7,
                        "col": 40
                      }
                    }
                  ],
                  "start": {
                    "line": 6,
                    "col": 24
                  },
                  "end": {
                    "line": 8,
                    "col": 5
                  }
                },
                "alternate": {
                  "type": "code_block",
                  "statements": [
                    {
                      "type": "var_assignment",
                      "var_name": {
                        "type": "identifier",
                        "value": "message",
                        "start": {
                          "line": 9,
                          "col": 8
                        },
                        "end": {
                          "line": 9,
                          "col": 15
                        }
                      },
                      "value": {
                        "type": "string_literal",
                        "value": "Stay out.",
                        "start": {
                          "line": 9,
                          "col": 18
                        },
                        "end": {
                          "line": 9,
                          "col": 29
                        }
                      },
                      "start": {
                        "line": 9,
                        "col": 8
                      },
                      "end": {
                        "line": 9,
                        "col": 29
                      }
                    }
                  ],
                  "start": {
                    "line": 8,
                    "col": 11
                  },
                  "end": {
                    "line": 10,
                    "col": 5
                  }
                },
                "start": {
                  "line": 6,
                  "col": 11
                },
                "end": {
                  "line": 10,
                  "col": 5
                }
              },
              "start": {
                "line": 4,
                "col": 4
              },
              "end": {
                "line": 10,
                "col": 5
              }
            },
            {
              "type": "return_statement",
              "value": {
                "type": "var_reference",
                "var_name": {
                  "type": "identifier",
                  "value": "message",
                  "start": {
                    "line": 11,
                    "col": 11
                  },
                  "end": {
                    "line": 11,
                    "col": 18
                  }
                },
                "start": {
                  "line": 11,
                  "col": 11
                },
                "end": {
                  "line": 11,
                  "col": 18
                }
              },
              "start": {
                "line": 11,
                "col": 4
              },
              "end": {
                "line": 11,
                "col": 18
              }
            }
          ],
          "start": {
            "line": 2,
            "col": 14
          },
          "end": {
            "line": 12,
            "col": 1
          }
        },
        "start": {
          "line": 2,
          "col": 0
        },
        "end": {
          "line": 12,
          "col": 1
        }
      },
      {
        "type": "proc_definition",
        "name": {
          "type": "identifier",
          "value": "main",
          "start": {
            "line": 13,
            "col": 5
          },
          "end": {
            "line": 13,
            "col": 9
          }
        },
        "parameters": [],
        "body": {
          "type": "code_block",
          "statements": [
            {
              "type": "call_expression",
              "fun_name": {
                "type": "identifier",
                "value": "print",
                "start": {
                  "line": 14,
                  "col": 4
                },
                "end": {
                  "line": 14,
                  "col": 9
                }
              },
              "arguments": [
                {
                  "type": "call_expression",
                  "fun_name": {
                    "type": "identifier",
                    "value": "door",
                    "start": {
                      "line": 14,
                      "col": 10
                    },
                    "end": {
                      "line": 14,
                      "col": 14
                    }
                  },
                  "arguments": [
                    {
                      "type": "number_literal",
                      "value": 22,
                      "start": {
                        "line": 14,
                        "col": 15
                      },
                      "end": {
                        "line": 14,
                        "col": 17
                      }
                    }
                  ],
                  "start": {
                    "line": 14,
                    "col": 10
                  },
                  "end": {
                    "line": 14,
                    "col": 18
                  }
                }
              ],
              "start": {
                "line": 14,
                "col": 4
              },
              "end": {
                "line": 14,
                "col": 19
              }
            },
            {
              "type": "call_expression",
              "fun_name": {
                "type": "identifier",
                "value": "print",
                "start": {
                  "line": 15,
                  "col": 4
                },
                "end": {
                  "line": 15,
                  "col": 9
                }
              },
              "arguments": [
                {
                  "type": "call_expression",
                  "fun_name": {
                    "type": "identifier",
                    "value": "door",
                    "start": {
                      "line": 15,
                      "col": 10
                    },
                    "end": {
                      "line": 15,
                      "col": 14
                    }
                  },
                  "arguments": [
                    {
                      "type": "number_literal",
                      "value": 19,
                      "start": {
                        "line": 15,
                        "col": 15
                      },
                      "end": {
                        "line": 15,
                        "col": 17
                      }
                    }
                  ],
                  "start": {
                    "line": 15,
                    "col": 10
                  },
                  "end": {
                    "line": 15,
                    "col": 18
                  }
                }
              ],
              "start": {
                "line": 15,
                "col": 4
              },
              "end": {
                "line": 15,
                "col": 19
              }
            },
            {
              "type": "call_expression",
              "fun_name": {
                "type": "identifier",
                "value": "print",
                "start": {
                  "line": 16,
                  "col": 4
                },
                "end": {
                  "line": 16,
                  "col": 9
                }
              },
              "arguments": [
                {
                  "type": "call_expression",
                  "fun_name": {
                    "type": "identifier",
                    "value": "door",
                    "start": {
                      "line": 16,
                      "col": 10
                    },
                    "end": {
                      "line": 16,
                      "col": 14
                    }
                  },
                  "arguments": [
                    {
                      "type": "number_literal",
                      "value": 10,
                      "start": {
                        "line": 16,
                        "col": 15
                      },
                      "end": {
                        "line": 16,
                        "col": 17
                      }
                    }
                  ],
                  "start": {
                    "line": 16,
                    "col": 10
                  },
                  "end": {
                    "line": 16,
                    "col": 18
                  }
                }
              ],
              "start": {
                "line": 16,
                "col": 4
              },
              "end": {
                "line": 16,
                "col": 19
              }
            }
          ],
          "start": {
            "line": 13,
            "col": 12
          },
          "end": {
            "line": 17,
            "col": 1
          }
        },
        "start": {
          "line": 13,
          "col": 0
        },
        "end": {
          "line": 17,
          "col": 1
        }
      }
    ]
  }
check: []
generate:
  js: |-
    function door(age) {
        var message = "You may come in.";
        if (age >= 21) {
            // Do nothing
        } else if (age >= 18) {
            var message = "Wait a couple years.";
        } else {
            var message = "Stay out.";
        }
        return message;
    }

    async function main() {
        print(door(22));
        print(door(19));
        print(door(10));
    }

    main().catch(err => console.log(err.message));

    // Built-in Functions:

    function range(...args) {
        let start, end;
        if (args.length === 1) {
            start = 0
            end = args[0];
        } else if (args.length === 2) {
            start = args[0];
            end = args[1];
        } else {
            throw new Error("Wrong number of arguments");
        }
        const ret = [];
        for (let i = start; i < end; i++) {
            ret.push(i);
        }
        return ret;
    }

    function split(string, separator) {
        return string.split(separator)
    }

    function print(...args) {
        console.log(...args);
    }

    function pop(array) {
        return array.pop();
    }

    function push(array, item) {
        return array.push(item);
    }

    function concat(one, other) {
        return one.concat(other);
    }

    function map(fn, arr) {
        return arr.map(fn);
    }

    function filter(fn, arr) {
        return arr.filter(fn);
    }

    function reduce(fn, initValue, arr) {
        return arr.reduce(fn, initValue);
    }

    function sqrt(num) {
        return Math.sqrt(num);
    }

    function sqr(num) {
        return num * num;
    }

    function join(array, separator) {
        return array.join(separator);
    }
exec:
  stdout: |
    You may come in.
    Wait a couple years.
    Stay out.
  stderr: ''
